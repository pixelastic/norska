mixin formField(field)
  //- Unfortunately, pug does not have a way to include dynamic files, so we
  //- need to create a big switch case like this
  case field.type
    when "list"
      +list(field)
    when "textarea"
      +textarea(field)
    when "upload"
      +upload(field)
    default
      +input(field)

mixin label(field) 
  - const displayName = field.displayName || field.name;
  .fln.w-25p.flrnw.flrar.pr-2
    .h-7.bold.text-5.gray-7.flrnw.flrcv=`${displayName}:`

mixin input(field)
  .flrnw.p-1
    +label(field)
    .fla
      input.p-2.h-7.w-100p.text-3.border.border-gray-3.rounded-2(name=field.name value=field.value type="text")

mixin textarea(field)
  .flrnw.p-1
    +label(field)
    .fla
      textarea.p-2.w-100p.text-3.border.border-gray-3.rounded-2(name=field.name)=field.value

mixin upload(field)
  .flrnw.p-1
    +label(field)
    .fla
      if field.value
        +upload_thumbnail(field.value)
      input(type="hidden" name=`${field.name}.uploadKey` value=field.name)
      input(type="hidden" name=`${field.name}.uploadDirectory` value=field.uploadDirectory)
      input(type="hidden" name=`${field.name}.uploadBasename` value=field.uploadBasename)
      input(type="hidden" name=`${field.name}.previousValue` value=field.value)
      input(type="file" name=`${field.name}`)

mixin upload_thumbnail(value)
  - 
    const extension = _.last(_.split(value, '.'));
    const imageExtensions = ['png', 'jpg', 'gif', 'svg'];
    const isImage = _.includes(imageExtensions, extension);
  if isImage
    img(src=`/src/${value}`)

mixin list(field)
  .flcnw.p-1
    input(type="hidden" name="__isList" value="1")
    each item in field.items
      .p-1.border.border-gray-4.rounded-2.mb-1
        .blue.bold.text-4=item.displayName
        each field in item.fields
          +formField(field)

